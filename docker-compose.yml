services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: web_scraping_app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    container_name: web_scraping_app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Django migrations
  django-setup:
    build: .
    container_name: web_scraping_app_django_setup
    command: "python manage.py migrate"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: "no"

  # Django Web Application
  web:
    build: .
    container_name: web_scraping_app_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - django-setup
    restart: unless-stopped

  # Celery Worker for background tasks
  worker:
    build: .
    container_name: web_scraping_app_worker
    command: celery -A web_scraping_app worker --loglevel=info --queues=scraping,celery
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - django-setup
    restart: unless-stopped

  # Flower for Celery monitoring
  flower:
    build: .
    container_name: web_scraping_app_flower
    command: celery -A web_scraping_app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - django-setup
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
